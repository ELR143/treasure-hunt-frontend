"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/map/page",{

/***/ "(app-pages-browser)/./src/app/map/page.jsx":
/*!******************************!*\
  !*** ./src/app/map/page.jsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_google_maps_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-google-maps/api */ \"(app-pages-browser)/./node_modules/@react-google-maps/api/dist/esm.js\");\n/* harmony import */ var _utils_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/api */ \"(app-pages-browser)/./src/utils/api.js\");\n// \"use client\";\n// import {\n//   GoogleMap,\n//   useJsApiLoader,\n//   MarkerF,\n//   MarkerClusterer,\n// } from \"@react-google-maps/api\";\n// import { useEffect, useState } from \"react\";\n// import CollectTreasure from \"./CollectTreasure\";\n// const containerStyle = {\n//   width: \"100%\",\n//   height: \"90vh\",\n// };\n// const treasures = [\n//   { type: \"treasure\", name: \"Big Ban\", coords: { lat: 51.5007, lng: -0.1246 } },\n//   { type: \"treasure\", name: \"Big Ban2\", coords: { lat: 51.5017, lng: -0.1246 } },\n//   {\n//     type: \"treasure\",\n//     name: \"Stonehenge\",\n//     coords: { lat: 51.1789, lng: -1.8262 },\n//   },\n//   { type: \"treasure\", name: \"closest\", coords: { lat: 52.25, lng: 0.1095 } },\n//   {\n//     type: \"treasure\",\n//     name: \"Edinburgh Castle\",\n//     coords: { lat: 55.9486, lng: -3.1999 },\n//   },\n// ];\n// const icons = {\n//   treasure: {\n//     url: \"/treasure.png\",\n//     scaledSize: { width: 50, height: 50 },\n//   },\n//   user: { url: \"/user.png\", scaledSize: { width: 50, height: 50 } },\n// };\n// function TreasureMap() {\n//   const [currentLocation, setCurrentLocation] = useState({\n//     type: \"user\",\n//     name: \"person\",\n//     coords: { lat: 0, lng: 0 },\n//   });\n//   const [points, setPoints] = useState(treasures);\n//   const [isLoadedMap, setIsLoadedMap] = useState(false);\n//   const options = { mapId: \"b6a1e26ca756909b\", mapTypeControl: false };\n//   const [destination, setDestination] = useState([]);\n//   const [minDistance, setMinDistance] = useState({});\n//   const [collect, setCollect] = useState(false);\n//   useJsApiLoader({\n//     id: \"google-map-script\",\n//     googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,\n//   });\n//   useEffect(() => {\n//     function coordsDetecting(respond) {\n//       let lng = respond.coords.longitude;\n//       let lat = respond.coords.latitude;\n//       setCurrentLocation((curr) => {\n//         curr.coords.lat = lat;\n//         curr.coords.lng = lng;\n//         return curr;\n//       });\n//       setIsLoadedMap(true);\n//     }\n//     navigator.geolocation.getCurrentPosition(coordsDetecting);\n//   }, []);\n//   useEffect(() => {\n//     const destinationArray = [];\n//     points.map((point) => {\n//       destinationArray.push(`${point.coords.lat}, ${point.coords.lng}`);\n//     });\n//     setDestination(destinationArray);\n//   }, []);\n//   const calculateDistances = () => {\n//     if (currentLocation && points.length > 0) {\n//       const service = new google.maps.DistanceMatrixService();\n//       const origins = [\n//         `${currentLocation.coords.lat}, ${currentLocation.coords.lng}`,\n//       ];\n//       service.getDistanceMatrix(\n//         {\n//           origins: origins,\n//           destinations: destination,\n//           travelMode: \"WALKING\",\n//         },\n//         (response, status) => {\n//           if (status === \"OK\") {\n//             let placeId = 0;\n//             let min = response.rows[0].elements[placeId].distance.value;\n//             response.rows[0].elements.map((element, i) => {\n//               if (min > element.distance.value) {\n//                 min = element.distance.value;\n//                 placeId = i;\n//               }\n//             });\n//             setMinDistance({ distance: min, place: points[placeId] });\n//           } else {\n//             console.error(\"Error calculating distances:\", status);\n//           }\n//         }\n//       );\n//     }\n//   };\n//   useEffect(() => {\n//     if (minDistance.distance < 100) {\n//       setCollect(true);\n//     }\n//   }, [minDistance]);\n//   const checkDistance = () => {\n//     calculateDistances();\n//   };\n//   return isLoadedMap ? (\n//     <>\n//       <section className=\"userInteraction\">\n//         <div onClick={checkDistance} className=\"find button\">\n//           Find your Nearest Treasure\n//         </div>\n//         {collect ? <CollectTreasure treasure={minDistance.place} /> : \"\"}\n//       </section>\n//       <GoogleMap\n//         mapContainerStyle={containerStyle}\n//         center={currentLocation.coords}\n//         zoom={8}\n//         options={options}\n//       >\n//         <MarkerClusterer>\n//           {(clusterer) =>\n//             points.map((treasure, i) => (\n//               <MarkerF\n//                 key={i}\n//                 position={{\n//                   lat: treasure.coords.lat,\n//                   lng: treasure.coords.lng,\n//                 }}\n//                 icon={icons[treasure.type]}\n//                 clusterer={clusterer}\n//               />\n//             ))\n//           }\n//         </MarkerClusterer>\n//         <MarkerF\n//           position={{\n//             lat: currentLocation.coords.lat,\n//             lng: currentLocation.coords.lng,\n//           }}\n//           icon={icons[currentLocation.type]}\n//           label={\"Its U!\"}\n//         />\n//       </GoogleMap>\n//     </>\n//   ) : (\n//     <><h1>Loading, please wait...</h1></>\n//   );\n// }\n// export default TreasureMap;\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nconst containerStyle = {\n    width: \"100%\",\n    height: \"400px\"\n};\nconst options = {\n    streetViewControl: false\n};\nconst GoogleMapComponent = ()=>{\n    _s();\n    // the default location will be the Northcoders base in Manchester\n    const [userLocation, setUserLocation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        lat: 53.47375,\n        lng: -2.24026\n    });\n    const [isInRange, setIsInRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [collected, setCollected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [treasureLocations, setTreasureLocations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [watchingPosition, setWatchingPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [mapZoom, setMapZoom] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(17);\n    // if the user scans and they are within the circle, a collect button appears\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (watchingPosition) {\n            if (navigator.geolocation) {\n                navigator.geolocation.watchPosition((position)=>{\n                    const userLatLng = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                    setUserLocation(userLatLng);\n                });\n            }\n        } else {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position)=>{\n                    const userLatLng = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                    setUserLocation(userLatLng);\n                });\n            }\n        }\n    }, [\n        watchingPosition\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        _utils_api__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getAllTreasures().then((data)=>{\n            setTreasureLocations(data);\n        }).catch((error)=>{\n            console.error(\"Error fetching treasures:\", error);\n        }).finally(()=>{\n            setIsLoading(false);\n        });\n    }, []);\n    const handleScan = async ()=>{\n        try {\n            const distancesMatrix = await new window.google.maps.DistanceMatrixService().getDistanceMatrix({\n                origins: [\n                    new window.google.maps.LatLng(userLocation.lat, userLocation.lng)\n                ],\n                destinations: treasureLocations.map((treasure1)=>new window.google.maps.LatLng(treasure1.lat, treasure1.lng)),\n                travelMode: \"WALKING\"\n            });\n            // distancesMatrix.rows[0].elements will contain an array of distances to each treasure\n            const distances = distancesMatrix.rows[0].elements.map((element)=>element.distance.value);\n            // Check if any treasure is within 20 meters\n            const rangeOfTreasure = distances.some((distance)=>distance <= 20);\n            console.log(distances);\n            setIsInRange(rangeOfTreasure);\n        } catch (error) {\n            console.error(\"Error calculating distances:\", error);\n        }\n    };\n    const handleCollect = ()=>{\n        setCollected(treasure.id);\n    };\n    const handleToggleWatchPosition = ()=>{\n        setWatchingPosition((prevWatching)=>!prevWatching);\n    };\n    const mapRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(\"map\");\n    const handleZoomChanged = ()=>{\n        console.log(\"Zoom level changed:\");\n        console.log(mapRef.current);\n        let firstLoad = true;\n        if (firstLoad === false) {\n            setMapZoom(mapRef.current.state.map.zoom);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_google_maps_api__WEBPACK_IMPORTED_MODULE_3__.LoadScript, {\n        googleMapsApiKey: \"AIzaSyA6QXt8Vbg_VUnXcvmyb5J8OueJNUNAH-g\",\n        onLoad: ()=>console.log(\"Google Maps API loaded\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n                onClick: handleScan,\n                children: \"Scan for Treasures!\"\n            }, void 0, false, {\n                fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                lineNumber: 297,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"\".concat(isInRange ? \"block\" : \"hidden\", \" bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"),\n                onClick: handleCollect,\n                children: \"Collect Treasure!\"\n            }, void 0, false, {\n                fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                lineNumber: 303,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"bg-\".concat(watchingPosition ? \"red\" : \"green\", \"-500 hover:bg-\").concat(watchingPosition ? \"red\" : \"green\", \"-700 text-white font-bold py-2 px-4 rounded-full\"),\n                onClick: handleToggleWatchPosition,\n                children: watchingPosition ? \"Stop Watching Position\" : \"Start Watching Position\"\n            }, void 0, false, {\n                fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                lineNumber: 311,\n                columnNumber: 7\n            }, undefined),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Loading treasures...\"\n            }, void 0, false, {\n                fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                lineNumber: 321,\n                columnNumber: 21\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_google_maps_api__WEBPACK_IMPORTED_MODULE_3__.GoogleMap, {\n                ref: mapRef,\n                mapContainerStyle: containerStyle,\n                center: watchingPosition ? userLocation : null,\n                zoom: mapZoom,\n                options: options,\n                onZoomChanged: handleZoomChanged,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_google_maps_api__WEBPACK_IMPORTED_MODULE_3__.Marker, {\n                        position: userLocation\n                    }, void 0, false, {\n                        fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                        lineNumber: 330,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_google_maps_api__WEBPACK_IMPORTED_MODULE_3__.MarkerClusterer, {\n                        gridSize: 500,\n                        children: (clusterer)=>treasureLocations.map((treasure1)=>mapZoom >= 16 ? null : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_google_maps_api__WEBPACK_IMPORTED_MODULE_3__.Marker, {\n                                    position: treasure1,\n                                    clusterer: clusterer\n                                }, treasure1.id, false, {\n                                    fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                                    lineNumber: 335,\n                                    columnNumber: 17\n                                }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                        lineNumber: 331,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n                lineNumber: 322,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/elr143/northcoders/treasure-hunt/treasure-hunt-frontend/src/app/map/page.jsx\",\n        lineNumber: 293,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GoogleMapComponent, \"Jc0pZx/ezROaPmtJBZ5oAvMgx4I=\");\n_c = GoogleMapComponent;\n/* harmony default export */ __webpack_exports__[\"default\"] = (GoogleMapComponent);\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/map/page.jsx\n"));

/***/ })

});